Executing (c657bef1-2e9f-4c70-bc46-4a2af7fde0c6): START TRANSACTION;
Executing (c657bef1-2e9f-4c70-bc46-4a2af7fde0c6): INSERT INTO `product` (`id`,`name`,`original_price`,`sale_price`,`description`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,'Product 1',10000,10000,'string','SHOW','2018-05-03 17:21:55','2018-05-03 17:21:55');
Executing (c657bef1-2e9f-4c70-bc46-4a2af7fde0c6): UPDATE `product` SET `type_id`=2,`updated_at`='2018-05-03 17:21:55' WHERE `id` = 12
Executing (c657bef1-2e9f-4c70-bc46-4a2af7fde0c6): UPDATE `image_upload` SET `priority`=0,`product_id`=12,`updated_at`='2018-05-03 17:21:56' WHERE `id` = 1
Executing (c657bef1-2e9f-4c70-bc46-4a2af7fde0c6): COMMIT;
Executing (default): SET FOREIGN_KEY_CHECKS = 0
Executing (default): CREATE TABLE IF NOT EXISTS `camera` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `camera`
Executing (default): CREATE TABLE IF NOT EXISTS `video` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `video`
Executing (default): CREATE TABLE IF NOT EXISTS `type` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `type`
Executing (default): CREATE TABLE IF NOT EXISTS `product` (`id` INTEGER auto_increment , `name` VARCHAR(255), `original_price` FLOAT, `sale_price` FLOAT, `description` VARCHAR(255), `status` ENUM('SHOW', 'HIDDEN'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `type_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`type_id`) REFERENCES `type` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product`
Executing (default): CREATE TABLE IF NOT EXISTS `image_upload` (`id` INTEGER auto_increment , `path` VARCHAR(255), `size` VARCHAR(255), `mimetype` VARCHAR(255), `originalname` VARCHAR(255), `encoding` VARCHAR(255), `filename` VARCHAR(255), `priority` TINYINT DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `product_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `image_upload`
Executing (default): CREATE TABLE IF NOT EXISTS `product_camera` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER , `product_id` INTEGER , PRIMARY KEY (`camera_id`, `product_id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product_camera`
Executing (default): CREATE TABLE IF NOT EXISTS `role` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `role`
Executing (default): CREATE TABLE IF NOT EXISTS `user` (`id` INTEGER auto_increment , `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `fullname` VARCHAR(255), `phone_number` VARCHAR(255), `address` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user`
Executing (default): CREATE TABLE IF NOT EXISTS `user_Role` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `role_id` INTEGER , `user_id` INTEGER , PRIMARY KEY (`role_id`, `user_id`), FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user_Role`
Executing (6c42c4c3-1605-44e8-bc2b-b9748cae2d78): START TRANSACTION;
Executing (6c42c4c3-1605-44e8-bc2b-b9748cae2d78): SELECT `id`, `name` FROM `role` AS `Role` WHERE `Role`.`name` = 'ADMIN' LIMIT 1;
Executing (6c42c4c3-1605-44e8-bc2b-b9748cae2d78): COMMIT;
Executing (c894ab37-1180-48e1-9056-09ca1eb37c8c): START TRANSACTION;
Executing (c894ab37-1180-48e1-9056-09ca1eb37c8c): SELECT `id`, `email`, `password`, `fullname`, `phone_number`, `address`, `created_at`, `updated_at` FROM `user` AS `User` WHERE `User`.`email` = 'tranducninhnd94@hotmail.com';
Executing (c894ab37-1180-48e1-9056-09ca1eb37c8c): COMMIT;
Executing (default): SELECT `created_at`, `updated_at`, `role_id`, `user_id` FROM `user_Role` AS `UserRole` WHERE `UserRole`.`user_id` = 1;
Executing (31bf3b4c-8958-491a-aff2-bdb001f4bdbb): START TRANSACTION;
Executing (31bf3b4c-8958-491a-aff2-bdb001f4bdbb): INSERT INTO `product` (`id`,`name`,`original_price`,`sale_price`,`description`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,'Product 1',10000,10000,'string','SHOW','2018-05-03 17:22:54','2018-05-03 17:22:54');
Executing (default): UPDATE `product` SET `type_id`=2,`updated_at`='2018-05-03 17:22:55' WHERE `id` = 13
Executing (31bf3b4c-8958-491a-aff2-bdb001f4bdbb): ROLLBACK;
Executing (default): SET FOREIGN_KEY_CHECKS = 0
Executing (default): CREATE TABLE IF NOT EXISTS `camera` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `camera`
Executing (default): CREATE TABLE IF NOT EXISTS `video` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `video`
Executing (default): CREATE TABLE IF NOT EXISTS `type` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `type`
Executing (default): CREATE TABLE IF NOT EXISTS `product` (`id` INTEGER auto_increment , `name` VARCHAR(255), `original_price` FLOAT, `sale_price` FLOAT, `description` VARCHAR(255), `status` ENUM('SHOW', 'HIDDEN'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `type_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`type_id`) REFERENCES `type` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product`
Executing (default): CREATE TABLE IF NOT EXISTS `image_upload` (`id` INTEGER auto_increment , `path` VARCHAR(255), `size` VARCHAR(255), `mimetype` VARCHAR(255), `originalname` VARCHAR(255), `encoding` VARCHAR(255), `filename` VARCHAR(255), `priority` TINYINT DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `product_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `image_upload`
Executing (default): CREATE TABLE IF NOT EXISTS `product_camera` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER , `product_id` INTEGER , PRIMARY KEY (`camera_id`, `product_id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product_camera`
Executing (default): CREATE TABLE IF NOT EXISTS `role` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `role`
Executing (default): CREATE TABLE IF NOT EXISTS `user` (`id` INTEGER auto_increment , `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `fullname` VARCHAR(255), `phone_number` VARCHAR(255), `address` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user`
Executing (default): CREATE TABLE IF NOT EXISTS `user_Role` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `role_id` INTEGER , `user_id` INTEGER , PRIMARY KEY (`role_id`, `user_id`), FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user_Role`
Executing (c0d39c90-c4b1-4dac-9863-e0d35f447758): START TRANSACTION;
Executing (c0d39c90-c4b1-4dac-9863-e0d35f447758): SELECT `id`, `name` FROM `role` AS `Role` WHERE `Role`.`name` = 'ADMIN' LIMIT 1;
Executing (c0d39c90-c4b1-4dac-9863-e0d35f447758): COMMIT;
Executing (08c4b085-5153-4faf-91e0-b9372c86fa98): START TRANSACTION;
Executing (08c4b085-5153-4faf-91e0-b9372c86fa98): SELECT `id`, `email`, `password`, `fullname`, `phone_number`, `address`, `created_at`, `updated_at` FROM `user` AS `User` WHERE `User`.`email` = 'tranducninhnd94@hotmail.com';
Executing (08c4b085-5153-4faf-91e0-b9372c86fa98): COMMIT;
Executing (default): SELECT `created_at`, `updated_at`, `role_id`, `user_id` FROM `user_Role` AS `UserRole` WHERE `UserRole`.`user_id` = 1;
Executing (4e283943-aff5-4b77-b35b-b9d475ea3107): START TRANSACTION;
Executing (4e283943-aff5-4b77-b35b-b9d475ea3107): INSERT INTO `product` (`id`,`name`,`original_price`,`sale_price`,`description`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,'Product 1',10000,10000,'string','SHOW','2018-05-03 17:24:00','2018-05-03 17:24:00');
Executing (4e283943-aff5-4b77-b35b-b9d475ea3107): UPDATE `product` SET `type_id`=2,`updated_at`='2018-05-03 17:24:06' WHERE `id` = 14
Executing (4e283943-aff5-4b77-b35b-b9d475ea3107): UPDATE `image_upload` SET `priority`=0,`product_id`=14,`updated_at`='2018-05-03 17:24:07' WHERE `id` = 1
Executing (4e283943-aff5-4b77-b35b-b9d475ea3107): COMMIT;
Executing (aa2f400b-db15-4edf-8cc3-4d1bd61b8e5d): START TRANSACTION;
Executing (aa2f400b-db15-4edf-8cc3-4d1bd61b8e5d): INSERT INTO `product` (`id`,`name`,`original_price`,`sale_price`,`description`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,'Product 1',10000,10000,'string','SHOW','2018-05-03 17:24:45','2018-05-03 17:24:45');
Executing (aa2f400b-db15-4edf-8cc3-4d1bd61b8e5d): UPDATE `product` SET `type_id`=2,`updated_at`='2018-05-03 17:24:45' WHERE `id` = 15
Executing (aa2f400b-db15-4edf-8cc3-4d1bd61b8e5d): ROLLBACK;
Executing (73db9fe3-5531-4d72-8fde-ed803c3e9152): START TRANSACTION;
Executing (73db9fe3-5531-4d72-8fde-ed803c3e9152): INSERT INTO `product` (`id`,`name`,`original_price`,`sale_price`,`description`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,'Product 1',10000,10000,'string','SHOW','2018-05-03 17:25:11','2018-05-03 17:25:11');
Executing (73db9fe3-5531-4d72-8fde-ed803c3e9152): UPDATE `product` SET `type_id`=2,`updated_at`='2018-05-03 17:25:11' WHERE `id` = 16
Executing (73db9fe3-5531-4d72-8fde-ed803c3e9152): ROLLBACK;
Executing (default): SET FOREIGN_KEY_CHECKS = 0
Executing (default): CREATE TABLE IF NOT EXISTS `camera` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `camera`
Executing (default): CREATE TABLE IF NOT EXISTS `video` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `video`
Executing (default): CREATE TABLE IF NOT EXISTS `type` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `type`
Executing (default): CREATE TABLE IF NOT EXISTS `product` (`id` INTEGER auto_increment , `name` VARCHAR(255), `original_price` FLOAT, `sale_price` FLOAT, `description` VARCHAR(255), `status` ENUM('SHOW', 'HIDDEN'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `type_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`type_id`) REFERENCES `type` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product`
Executing (default): CREATE TABLE IF NOT EXISTS `image_upload` (`id` INTEGER auto_increment , `path` VARCHAR(255), `size` VARCHAR(255), `mimetype` VARCHAR(255), `originalname` VARCHAR(255), `encoding` VARCHAR(255), `filename` VARCHAR(255), `priority` TINYINT DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `product_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `image_upload`
Executing (default): CREATE TABLE IF NOT EXISTS `product_camera` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER , `product_id` INTEGER , PRIMARY KEY (`camera_id`, `product_id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product_camera`
Executing (default): CREATE TABLE IF NOT EXISTS `role` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `role`
Executing (default): CREATE TABLE IF NOT EXISTS `user` (`id` INTEGER auto_increment , `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `fullname` VARCHAR(255), `phone_number` VARCHAR(255), `address` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user`
Executing (default): CREATE TABLE IF NOT EXISTS `user_Role` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `role_id` INTEGER , `user_id` INTEGER , PRIMARY KEY (`role_id`, `user_id`), FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user_Role`
Executing (99e973cf-417f-45f0-b22d-4c2a269243ac): START TRANSACTION;
Executing (99e973cf-417f-45f0-b22d-4c2a269243ac): SELECT `id`, `name` FROM `role` AS `Role` WHERE `Role`.`name` = 'ADMIN' LIMIT 1;
Executing (99e973cf-417f-45f0-b22d-4c2a269243ac): COMMIT;
Executing (cfc587c9-fd07-462e-9e28-c7e39ef57848): START TRANSACTION;
Executing (cfc587c9-fd07-462e-9e28-c7e39ef57848): SELECT `id`, `email`, `password`, `fullname`, `phone_number`, `address`, `created_at`, `updated_at` FROM `user` AS `User` WHERE `User`.`email` = 'tranducninhnd94@hotmail.com';
Executing (cfc587c9-fd07-462e-9e28-c7e39ef57848): COMMIT;
Executing (default): SELECT `created_at`, `updated_at`, `role_id`, `user_id` FROM `user_Role` AS `UserRole` WHERE `UserRole`.`user_id` = 1;
Executing (ede15a10-841a-4b79-ba61-6f03acf998e9): START TRANSACTION;
Executing (ede15a10-841a-4b79-ba61-6f03acf998e9): INSERT INTO `product` (`id`,`name`,`original_price`,`sale_price`,`description`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,'Product 1',10000,10000,'string','SHOW','2018-05-03 17:26:02','2018-05-03 17:26:02');
Executing (default): UPDATE `product` SET `type_id`=2,`updated_at`='2018-05-03 17:26:03' WHERE `id` = 17
Executing (ede15a10-841a-4b79-ba61-6f03acf998e9): ROLLBACK;
Executing (default): SET FOREIGN_KEY_CHECKS = 0
Executing (default): CREATE TABLE IF NOT EXISTS `camera` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `camera`
Executing (default): CREATE TABLE IF NOT EXISTS `video` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `video`
Executing (default): CREATE TABLE IF NOT EXISTS `type` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `type`
Executing (default): CREATE TABLE IF NOT EXISTS `product` (`id` INTEGER auto_increment , `name` VARCHAR(255), `original_price` FLOAT, `sale_price` FLOAT, `description` VARCHAR(255), `status` ENUM('SHOW', 'HIDDEN'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `type_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`type_id`) REFERENCES `type` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product`
Executing (default): CREATE TABLE IF NOT EXISTS `image_upload` (`id` INTEGER auto_increment , `path` VARCHAR(255), `size` VARCHAR(255), `mimetype` VARCHAR(255), `originalname` VARCHAR(255), `encoding` VARCHAR(255), `filename` VARCHAR(255), `priority` TINYINT DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `product_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `image_upload`
Executing (default): CREATE TABLE IF NOT EXISTS `product_camera` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER , `product_id` INTEGER , PRIMARY KEY (`camera_id`, `product_id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product_camera`
Executing (default): CREATE TABLE IF NOT EXISTS `role` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `role`
Executing (default): CREATE TABLE IF NOT EXISTS `user` (`id` INTEGER auto_increment , `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `fullname` VARCHAR(255), `phone_number` VARCHAR(255), `address` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user`
Executing (default): CREATE TABLE IF NOT EXISTS `user_Role` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `role_id` INTEGER , `user_id` INTEGER , PRIMARY KEY (`role_id`, `user_id`), FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user_Role`
Executing (b649e4fa-49d6-4c4f-af80-4a299880922f): START TRANSACTION;
Executing (b649e4fa-49d6-4c4f-af80-4a299880922f): SELECT `id`, `name` FROM `role` AS `Role` WHERE `Role`.`name` = 'ADMIN' LIMIT 1;
Executing (b649e4fa-49d6-4c4f-af80-4a299880922f): COMMIT;
Executing (1f53fff1-1bc0-43ff-8515-63601d73dc85): START TRANSACTION;
Executing (1f53fff1-1bc0-43ff-8515-63601d73dc85): SELECT `id`, `email`, `password`, `fullname`, `phone_number`, `address`, `created_at`, `updated_at` FROM `user` AS `User` WHERE `User`.`email` = 'tranducninhnd94@hotmail.com';
Executing (1f53fff1-1bc0-43ff-8515-63601d73dc85): COMMIT;
Executing (default): SELECT `created_at`, `updated_at`, `role_id`, `user_id` FROM `user_Role` AS `UserRole` WHERE `UserRole`.`user_id` = 1;
Executing (e97271d7-7233-406d-bbd2-4779aeb0808f): START TRANSACTION;
Executing (e97271d7-7233-406d-bbd2-4779aeb0808f): INSERT INTO `product` (`id`,`name`,`original_price`,`sale_price`,`description`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,'Product 1',10000,10000,'string','SHOW','2018-05-03 17:27:15','2018-05-03 17:27:15');
Executing (default): UPDATE `product` SET `type_id`=2,`updated_at`='2018-05-03 17:27:17' WHERE `id` = 18
Executing (default): SET FOREIGN_KEY_CHECKS = 0
Executing (default): CREATE TABLE IF NOT EXISTS `camera` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `camera`
Executing (default): CREATE TABLE IF NOT EXISTS `video` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `video`
Executing (default): CREATE TABLE IF NOT EXISTS `type` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `type`
Executing (default): CREATE TABLE IF NOT EXISTS `product` (`id` INTEGER auto_increment , `name` VARCHAR(255), `original_price` FLOAT, `sale_price` FLOAT, `description` VARCHAR(255), `status` ENUM('SHOW', 'HIDDEN'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `type_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`type_id`) REFERENCES `type` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product`
Executing (default): CREATE TABLE IF NOT EXISTS `image_upload` (`id` INTEGER auto_increment , `path` VARCHAR(255), `size` VARCHAR(255), `mimetype` VARCHAR(255), `originalname` VARCHAR(255), `encoding` VARCHAR(255), `filename` VARCHAR(255), `priority` TINYINT DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `product_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `image_upload`
Executing (default): CREATE TABLE IF NOT EXISTS `product_camera` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER , `product_id` INTEGER , PRIMARY KEY (`camera_id`, `product_id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product_camera`
Executing (default): CREATE TABLE IF NOT EXISTS `role` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `role`
Executing (default): CREATE TABLE IF NOT EXISTS `user` (`id` INTEGER auto_increment , `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `fullname` VARCHAR(255), `phone_number` VARCHAR(255), `address` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user`
Executing (default): CREATE TABLE IF NOT EXISTS `user_Role` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `role_id` INTEGER , `user_id` INTEGER , PRIMARY KEY (`role_id`, `user_id`), FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user_Role`
Executing (daf876de-8866-4a6b-9317-71d5518d62c2): START TRANSACTION;
Executing (daf876de-8866-4a6b-9317-71d5518d62c2): SELECT `id`, `name` FROM `role` AS `Role` WHERE `Role`.`name` = 'ADMIN' LIMIT 1;
Executing (daf876de-8866-4a6b-9317-71d5518d62c2): COMMIT;
Executing (ec317f90-70c1-4cd9-9d3e-6aee6e1f7f96): START TRANSACTION;
Executing (ec317f90-70c1-4cd9-9d3e-6aee6e1f7f96): SELECT `id`, `email`, `password`, `fullname`, `phone_number`, `address`, `created_at`, `updated_at` FROM `user` AS `User` WHERE `User`.`email` = 'tranducninhnd94@hotmail.com';
Executing (ec317f90-70c1-4cd9-9d3e-6aee6e1f7f96): COMMIT;
Executing (default): SELECT `created_at`, `updated_at`, `role_id`, `user_id` FROM `user_Role` AS `UserRole` WHERE `UserRole`.`user_id` = 1;
Executing (55317577-4299-485e-8f39-2ea2acb839d4): START TRANSACTION;
Executing (55317577-4299-485e-8f39-2ea2acb839d4): INSERT INTO `product` (`id`,`name`,`original_price`,`sale_price`,`description`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,'Product 1',10000,10000,'string','SHOW','2018-05-03 17:27:50','2018-05-03 17:27:50');
Executing (default): UPDATE `product` SET `type_id`=2,`updated_at`='2018-05-03 17:27:51' WHERE `id` = 19
Executing (default): SET FOREIGN_KEY_CHECKS = 0
Executing (default): CREATE TABLE IF NOT EXISTS `camera` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `camera`
Executing (default): CREATE TABLE IF NOT EXISTS `video` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `video`
Executing (default): CREATE TABLE IF NOT EXISTS `type` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `type`
Executing (default): CREATE TABLE IF NOT EXISTS `product` (`id` INTEGER auto_increment , `name` VARCHAR(255), `original_price` FLOAT, `sale_price` FLOAT, `description` VARCHAR(255), `status` ENUM('SHOW', 'HIDDEN'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `type_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`type_id`) REFERENCES `type` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product`
Executing (default): CREATE TABLE IF NOT EXISTS `image_upload` (`id` INTEGER auto_increment , `path` VARCHAR(255), `size` VARCHAR(255), `mimetype` VARCHAR(255), `originalname` VARCHAR(255), `encoding` VARCHAR(255), `filename` VARCHAR(255), `priority` TINYINT DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `product_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `image_upload`
Executing (default): CREATE TABLE IF NOT EXISTS `product_camera` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER , `product_id` INTEGER , PRIMARY KEY (`camera_id`, `product_id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product_camera`
Executing (default): CREATE TABLE IF NOT EXISTS `role` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `role`
Executing (default): CREATE TABLE IF NOT EXISTS `user` (`id` INTEGER auto_increment , `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `fullname` VARCHAR(255), `phone_number` VARCHAR(255), `address` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user`
Executing (default): CREATE TABLE IF NOT EXISTS `user_Role` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `role_id` INTEGER , `user_id` INTEGER , PRIMARY KEY (`role_id`, `user_id`), FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user_Role`
Executing (5e98f663-1967-42aa-b7e2-f0032865ffd2): START TRANSACTION;
Executing (5e98f663-1967-42aa-b7e2-f0032865ffd2): SELECT `id`, `name` FROM `role` AS `Role` WHERE `Role`.`name` = 'ADMIN' LIMIT 1;
Executing (5e98f663-1967-42aa-b7e2-f0032865ffd2): COMMIT;
Executing (c9a89116-8524-4b79-a809-7d9034f70caf): START TRANSACTION;
Executing (c9a89116-8524-4b79-a809-7d9034f70caf): SELECT `id`, `email`, `password`, `fullname`, `phone_number`, `address`, `created_at`, `updated_at` FROM `user` AS `User` WHERE `User`.`email` = 'tranducninhnd94@hotmail.com';
Executing (c9a89116-8524-4b79-a809-7d9034f70caf): COMMIT;
Executing (default): SELECT `created_at`, `updated_at`, `role_id`, `user_id` FROM `user_Role` AS `UserRole` WHERE `UserRole`.`user_id` = 1;
Executing (c9489d40-fcd3-4fae-998c-ee6a49850563): START TRANSACTION;
Executing (c9489d40-fcd3-4fae-998c-ee6a49850563): INSERT INTO `product` (`id`,`name`,`original_price`,`sale_price`,`description`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,'Product 1',10000,10000,'string','SHOW','2018-05-03 17:28:27','2018-05-03 17:28:27');
Executing (c9489d40-fcd3-4fae-998c-ee6a49850563): UPDATE `product` SET `type_id`=2,`updated_at`='2018-05-03 17:28:28' WHERE `id` = 20
Executing (c9489d40-fcd3-4fae-998c-ee6a49850563): UPDATE `image_upload` SET `priority`=0,`product_id`=20,`updated_at`='2018-05-03 17:28:28' WHERE `id` = 2
Executing (c9489d40-fcd3-4fae-998c-ee6a49850563): COMMIT;
Executing (default): SET FOREIGN_KEY_CHECKS = 0
Executing (default): CREATE TABLE IF NOT EXISTS `camera` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `camera`
Executing (default): CREATE TABLE IF NOT EXISTS `video` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `video`
Executing (default): CREATE TABLE IF NOT EXISTS `type` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `type`
Executing (default): CREATE TABLE IF NOT EXISTS `product` (`id` INTEGER auto_increment , `name` VARCHAR(255), `original_price` FLOAT, `sale_price` FLOAT, `description` VARCHAR(255), `status` ENUM('SHOW', 'HIDDEN'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `type_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`type_id`) REFERENCES `type` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product`
Executing (default): CREATE TABLE IF NOT EXISTS `image_upload` (`id` INTEGER auto_increment , `path` VARCHAR(255), `size` VARCHAR(255), `mimetype` VARCHAR(255), `originalname` VARCHAR(255), `encoding` VARCHAR(255), `filename` VARCHAR(255), `priority` TINYINT DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `product_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `image_upload`
Executing (default): CREATE TABLE IF NOT EXISTS `product_camera` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER , `product_id` INTEGER , PRIMARY KEY (`camera_id`, `product_id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product_camera`
Executing (default): CREATE TABLE IF NOT EXISTS `role` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `role`
Executing (default): CREATE TABLE IF NOT EXISTS `user` (`id` INTEGER auto_increment , `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `fullname` VARCHAR(255), `phone_number` VARCHAR(255), `address` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user`
Executing (default): CREATE TABLE IF NOT EXISTS `user_Role` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `role_id` INTEGER , `user_id` INTEGER , PRIMARY KEY (`role_id`, `user_id`), FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user_Role`
Executing (1546a964-dcb6-409e-99d4-1546bc8d110e): START TRANSACTION;
Executing (1546a964-dcb6-409e-99d4-1546bc8d110e): SELECT `id`, `name` FROM `role` AS `Role` WHERE `Role`.`name` = 'ADMIN' LIMIT 1;
Executing (1546a964-dcb6-409e-99d4-1546bc8d110e): COMMIT;
Executing (1e0e8691-dcaf-4947-ad69-70ed45278f77): START TRANSACTION;
Executing (1e0e8691-dcaf-4947-ad69-70ed45278f77): SELECT `id`, `email`, `password`, `fullname`, `phone_number`, `address`, `created_at`, `updated_at` FROM `user` AS `User` WHERE `User`.`email` = 'tranducninhnd94@hotmail.com';
Executing (1e0e8691-dcaf-4947-ad69-70ed45278f77): COMMIT;
Executing (default): SELECT `created_at`, `updated_at`, `role_id`, `user_id` FROM `user_Role` AS `UserRole` WHERE `UserRole`.`user_id` = 1;
Executing (9027ca71-93bf-4810-84ba-307373962dc4): START TRANSACTION;
Executing (9027ca71-93bf-4810-84ba-307373962dc4): INSERT INTO `product` (`id`,`name`,`original_price`,`sale_price`,`description`,`status`,`created_at`,`updated_at`,`type_id`) VALUES (DEFAULT,'Product 1',10000,10000,'string','SHOW','2018-05-03 17:30:25','2018-05-03 17:30:25',2);
Executing (9027ca71-93bf-4810-84ba-307373962dc4): UPDATE `image_upload` SET `priority`=0,`product_id`=21,`updated_at`='2018-05-03 17:30:35' WHERE `id` = 2
Executing (9027ca71-93bf-4810-84ba-307373962dc4): COMMIT;
Executing (default): SET FOREIGN_KEY_CHECKS = 0
Executing (default): CREATE TABLE IF NOT EXISTS `camera` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `camera`
Executing (default): CREATE TABLE IF NOT EXISTS `video` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `video`
Executing (default): CREATE TABLE IF NOT EXISTS `type` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `type`
Executing (default): CREATE TABLE IF NOT EXISTS `product` (`id` INTEGER auto_increment , `name` VARCHAR(255), `original_price` FLOAT, `sale_price` FLOAT, `description` VARCHAR(255), `status` ENUM('SHOW', 'HIDDEN'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `type_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`type_id`) REFERENCES `type` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product`
Executing (default): CREATE TABLE IF NOT EXISTS `image_upload` (`id` INTEGER auto_increment , `path` VARCHAR(255), `size` VARCHAR(255), `mimetype` VARCHAR(255), `originalname` VARCHAR(255), `encoding` VARCHAR(255), `filename` VARCHAR(255), `priority` TINYINT DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `product_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `image_upload`
Executing (default): CREATE TABLE IF NOT EXISTS `product_camera` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER , `product_id` INTEGER , PRIMARY KEY (`camera_id`, `product_id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product_camera`
Executing (default): CREATE TABLE IF NOT EXISTS `role` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `role`
Executing (default): CREATE TABLE IF NOT EXISTS `user` (`id` INTEGER auto_increment , `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `fullname` VARCHAR(255), `phone_number` VARCHAR(255), `address` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user`
Executing (default): CREATE TABLE IF NOT EXISTS `user_Role` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `role_id` INTEGER , `user_id` INTEGER , PRIMARY KEY (`role_id`, `user_id`), FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user_Role`
Executing (c3f77ac6-86a7-4511-bdfb-848d868b4daa): START TRANSACTION;
Executing (c3f77ac6-86a7-4511-bdfb-848d868b4daa): SELECT `id`, `name` FROM `role` AS `Role` WHERE `Role`.`name` = 'ADMIN' LIMIT 1;
Executing (c3f77ac6-86a7-4511-bdfb-848d868b4daa): COMMIT;
Executing (b6937257-6856-4d27-a5f7-2b2614901032): START TRANSACTION;
Executing (b6937257-6856-4d27-a5f7-2b2614901032): SELECT `id`, `email`, `password`, `fullname`, `phone_number`, `address`, `created_at`, `updated_at` FROM `user` AS `User` WHERE `User`.`email` = 'tranducninhnd94@hotmail.com';
Executing (b6937257-6856-4d27-a5f7-2b2614901032): COMMIT;
Executing (default): SELECT `created_at`, `updated_at`, `role_id`, `user_id` FROM `user_Role` AS `UserRole` WHERE `UserRole`.`user_id` = 1;
Executing (7692f45d-06f2-4dca-b9f3-e173f88a1014): START TRANSACTION;
Executing (7692f45d-06f2-4dca-b9f3-e173f88a1014): INSERT INTO `product` (`id`,`name`,`original_price`,`sale_price`,`description`,`status`,`created_at`,`updated_at`,`type_id`) VALUES (DEFAULT,'Product 1',10000,10000,'string','SHOW','2018-05-03 17:33:05','2018-05-03 17:33:05',2);
Executing (default): SET FOREIGN_KEY_CHECKS = 0
Executing (default): CREATE TABLE IF NOT EXISTS `camera` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `camera`
Executing (default): CREATE TABLE IF NOT EXISTS `video` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `video`
Executing (default): CREATE TABLE IF NOT EXISTS `type` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `type`
Executing (default): CREATE TABLE IF NOT EXISTS `product` (`id` INTEGER auto_increment , `name` VARCHAR(255), `original_price` FLOAT, `sale_price` FLOAT, `description` VARCHAR(255), `status` ENUM('SHOW', 'HIDDEN'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `type_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`type_id`) REFERENCES `type` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product`
Executing (default): CREATE TABLE IF NOT EXISTS `image_upload` (`id` INTEGER auto_increment , `path` VARCHAR(255), `size` VARCHAR(255), `mimetype` VARCHAR(255), `originalname` VARCHAR(255), `encoding` VARCHAR(255), `filename` VARCHAR(255), `priority` TINYINT DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `product_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `image_upload`
Executing (default): CREATE TABLE IF NOT EXISTS `product_camera` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER , `product_id` INTEGER , PRIMARY KEY (`camera_id`, `product_id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product_camera`
Executing (default): CREATE TABLE IF NOT EXISTS `role` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `role`
Executing (default): CREATE TABLE IF NOT EXISTS `user` (`id` INTEGER auto_increment , `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `fullname` VARCHAR(255), `phone_number` VARCHAR(255), `address` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user`
Executing (default): CREATE TABLE IF NOT EXISTS `user_Role` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `role_id` INTEGER , `user_id` INTEGER , PRIMARY KEY (`role_id`, `user_id`), FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user_Role`
Executing (d5dd1811-4a40-4499-9a43-0cc60a89d268): START TRANSACTION;
Executing (d5dd1811-4a40-4499-9a43-0cc60a89d268): SELECT `id`, `name` FROM `role` AS `Role` WHERE `Role`.`name` = 'ADMIN' LIMIT 1;
Executing (d5dd1811-4a40-4499-9a43-0cc60a89d268): COMMIT;
Executing (4b3acaec-e87c-4d03-b525-86deeaf8f315): START TRANSACTION;
Executing (4b3acaec-e87c-4d03-b525-86deeaf8f315): SELECT `id`, `email`, `password`, `fullname`, `phone_number`, `address`, `created_at`, `updated_at` FROM `user` AS `User` WHERE `User`.`email` = 'tranducninhnd94@hotmail.com';
Executing (4b3acaec-e87c-4d03-b525-86deeaf8f315): COMMIT;
Executing (default): SELECT `created_at`, `updated_at`, `role_id`, `user_id` FROM `user_Role` AS `UserRole` WHERE `UserRole`.`user_id` = 1;
Executing (db23204c-3fa9-406e-89f1-f817e86c3156): START TRANSACTION;
Executing (db23204c-3fa9-406e-89f1-f817e86c3156): INSERT INTO `product` (`id`,`name`,`original_price`,`sale_price`,`description`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,'Product 1',10000,10000,'string','SHOW','2018-05-03 17:33:36','2018-05-03 17:33:36');
Executing (db23204c-3fa9-406e-89f1-f817e86c3156): SELECT `id`, `name` FROM `type` AS `Type` WHERE `Type`.`id` = 2;
Executing (default): UPDATE `product` SET `type_id`=NULL,`updated_at`='2018-05-03 17:34:04' WHERE `id` = 23
Executing (default): SET FOREIGN_KEY_CHECKS = 0
Executing (default): CREATE TABLE IF NOT EXISTS `camera` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `camera`
Executing (default): CREATE TABLE IF NOT EXISTS `video` (`id` INTEGER auto_increment , `uri` VARCHAR(255), `location` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `video`
Executing (default): CREATE TABLE IF NOT EXISTS `type` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `type`
Executing (default): CREATE TABLE IF NOT EXISTS `product` (`id` INTEGER auto_increment , `name` VARCHAR(255), `original_price` FLOAT, `sale_price` FLOAT, `description` VARCHAR(255), `status` ENUM('SHOW', 'HIDDEN'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `type_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`type_id`) REFERENCES `type` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product`
Executing (default): CREATE TABLE IF NOT EXISTS `image_upload` (`id` INTEGER auto_increment , `path` VARCHAR(255), `size` VARCHAR(255), `mimetype` VARCHAR(255), `originalname` VARCHAR(255), `encoding` VARCHAR(255), `filename` VARCHAR(255), `priority` TINYINT DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `product_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `image_upload`
Executing (default): CREATE TABLE IF NOT EXISTS `product_camera` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER , `product_id` INTEGER , PRIMARY KEY (`camera_id`, `product_id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product_camera`
Executing (default): CREATE TABLE IF NOT EXISTS `role` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `role`
Executing (default): CREATE TABLE IF NOT EXISTS `user` (`id` INTEGER auto_increment , `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `fullname` VARCHAR(255), `phone_number` VARCHAR(255), `address` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user`
Executing (default): CREATE TABLE IF NOT EXISTS `user_Role` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `role_id` INTEGER , `user_id` INTEGER , PRIMARY KEY (`role_id`, `user_id`), FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user_Role`
Executing (f3e9afb8-48be-4259-9d1f-659e822663e2): START TRANSACTION;
Executing (f3e9afb8-48be-4259-9d1f-659e822663e2): SELECT `id`, `name` FROM `role` AS `Role` WHERE `Role`.`name` = 'ADMIN' LIMIT 1;
Executing (f3e9afb8-48be-4259-9d1f-659e822663e2): COMMIT;
Executing (6fc7bfd5-29aa-4760-a8a3-0f885906ed76): START TRANSACTION;
Executing (6fc7bfd5-29aa-4760-a8a3-0f885906ed76): SELECT `id`, `email`, `password`, `fullname`, `phone_number`, `address`, `created_at`, `updated_at` FROM `user` AS `User` WHERE `User`.`email` = 'tranducninhnd94@hotmail.com';
Executing (6fc7bfd5-29aa-4760-a8a3-0f885906ed76): COMMIT;
Executing (default): SELECT `created_at`, `updated_at`, `role_id`, `user_id` FROM `user_Role` AS `UserRole` WHERE `UserRole`.`user_id` = 1;
Executing (4b9e7cb1-5f44-4d42-aae4-c1f5c75bbc89): START TRANSACTION;
Executing (4b9e7cb1-5f44-4d42-aae4-c1f5c75bbc89): INSERT INTO `product` (`id`,`name`,`original_price`,`sale_price`,`description`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,'Product 1',10000,10000,'string','SHOW','2018-05-03 17:34:47','2018-05-03 17:34:47');
Executing (4b9e7cb1-5f44-4d42-aae4-c1f5c75bbc89): SELECT `id`, `name` FROM `type` AS `Type` WHERE `Type`.`id` = 2;
Executing (4b9e7cb1-5f44-4d42-aae4-c1f5c75bbc89): UPDATE `product` SET `type_id`=NULL,`updated_at`='2018-05-03 17:34:49' WHERE `id` = 24
Executing (4b9e7cb1-5f44-4d42-aae4-c1f5c75bbc89): UPDATE `image_upload` SET `priority`=0,`product_id`=24,`updated_at`='2018-05-03 17:34:49' WHERE `id` = 2
Executing (4b9e7cb1-5f44-4d42-aae4-c1f5c75bbc89): COMMIT;
Executing (6a63a6af-c8da-42bc-97f4-cf38d58a4ca9): START TRANSACTION;
Executing (6a63a6af-c8da-42bc-97f4-cf38d58a4ca9): INSERT INTO `product` (`id`,`name`,`original_price`,`sale_price`,`description`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,'Product 1',10000,10000,'string','SHOW','2018-05-03 17:35:23','2018-05-03 17:35:23');
Executing (6a63a6af-c8da-42bc-97f4-cf38d58a4ca9): SELECT `id`, `name` FROM `type` AS `Type` WHERE `Type`.`id` = 1;
Executing (6a63a6af-c8da-42bc-97f4-cf38d58a4ca9): UPDATE `product` SET `type_id`=1,`updated_at`='2018-05-03 17:35:34' WHERE `id` = 25
Executing (6a63a6af-c8da-42bc-97f4-cf38d58a4ca9): UPDATE `image_upload` SET `priority`=0,`product_id`=25,`updated_at`='2018-05-03 17:35:34' WHERE `id` = 2
Executing (6a63a6af-c8da-42bc-97f4-cf38d58a4ca9): COMMIT;
Executing (default): SET FOREIGN_KEY_CHECKS = 0
Executing (default): DROP TABLE IF EXISTS `vendor`;
Executing (default): DROP TABLE IF EXISTS `promotion`;
Executing (default): DROP TABLE IF EXISTS `user_Role`;
Executing (default): DROP TABLE IF EXISTS `role_permission`;
Executing (default): DROP TABLE IF EXISTS `role`;
Executing (default): DROP TABLE IF EXISTS `permission`;
Executing (default): DROP TABLE IF EXISTS `product_promotion`;
Executing (default): DROP TABLE IF EXISTS `product_camera`;
Executing (default): DROP TABLE IF EXISTS `order_product`;
Executing (default): DROP TABLE IF EXISTS `order`;
Executing (default): DROP TABLE IF EXISTS `user`;
Executing (default): DROP TABLE IF EXISTS `news`;
Executing (default): DROP TABLE IF EXISTS `ward`;
Executing (default): DROP TABLE IF EXISTS `district`;
Executing (default): DROP TABLE IF EXISTS `province`;
Executing (default): DROP TABLE IF EXISTS `image_upload`;
Executing (default): DROP TABLE IF EXISTS `video`;
Executing (default): DROP TABLE IF EXISTS `product`;
Executing (default): DROP TABLE IF EXISTS `type`;
Executing (default): DROP TABLE IF EXISTS `camera`;
Executing (default): DROP TABLE IF EXISTS `camera`;
Executing (default): CREATE TABLE IF NOT EXISTS `camera` (`id` INTEGER auto_increment , `name` VARCHAR(255) UNIQUE, `namespace` VARCHAR(255) UNIQUE, `resolution` VARCHAR(255), `fileOutput` VARCHAR(255), `uri` VARCHAR(255) UNIQUE, `location` VARCHAR(255), `status` ENUM('ON', 'OFF', 'RETIRED') DEFAULT 'OFF', `description` VARCHAR(255), `type` ENUM('BINH_RUOU', 'CHUONG_GA'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `camera`
Executing (default): DROP TABLE IF EXISTS `type`;
Executing (default): CREATE TABLE IF NOT EXISTS `type` (`id` INTEGER auto_increment , `name` VARCHAR(255) UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `type`
Executing (default): DROP TABLE IF EXISTS `product`;
Executing (default): CREATE TABLE IF NOT EXISTS `product` (`id` INTEGER auto_increment , `name` VARCHAR(255) UNIQUE, `original_price` FLOAT, `sale_price` FLOAT, `description` VARCHAR(255), `status` ENUM('SHOW', 'HIDDEN'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `type_id` INTEGER, `camera_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`type_id`) REFERENCES `type` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product`
Executing (default): DROP TABLE IF EXISTS `video`;
Executing (default): CREATE TABLE IF NOT EXISTS `video` (`id` INTEGER auto_increment , `id_video` VARCHAR(255), `url` TEXT, `hosted_by` ENUM('FACEBOOK', 'DRIVER', 'YOUTUBE', 'LOCAL'), `title` VARCHAR(255), `description` TEXT, `started_at` DATETIME, `ended_at` DATETIME, `embedded_link` TEXT, `created_type` ENUM('FREQUENCY', 'BY_PRODUCT'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER, `product_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `video`
Executing (default): DROP TABLE IF EXISTS `image_upload`;
Executing (default): CREATE TABLE IF NOT EXISTS `image_upload` (`id` INTEGER auto_increment , `path` VARCHAR(255), `size` VARCHAR(255), `mimetype` VARCHAR(255), `originalname` VARCHAR(255), `encoding` VARCHAR(255), `filename` VARCHAR(255), `priority` TINYINT DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `product_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `image_upload`
Executing (default): DROP TABLE IF EXISTS `province`;
Executing (default): CREATE TABLE IF NOT EXISTS `province` (`id` INTEGER auto_increment , `name` VARCHAR(255) UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `province`
Executing (default): DROP TABLE IF EXISTS `district`;
Executing (default): CREATE TABLE IF NOT EXISTS `district` (`id` INTEGER auto_increment , `name` VARCHAR(255) UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `province_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`province_id`) REFERENCES `province` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `district`
Executing (default): DROP TABLE IF EXISTS `ward`;
Executing (default): CREATE TABLE IF NOT EXISTS `ward` (`id` INTEGER auto_increment , `name` VARCHAR(255) UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `disctrict_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`disctrict_id`) REFERENCES `district` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `ward`
Executing (default): DROP TABLE IF EXISTS `news`;
Executing (default): CREATE TABLE IF NOT EXISTS `news` (`id` INTEGER auto_increment , `title` VARCHAR(255), `content` TEXT, `status` ENUM('SHOW', 'HIDDEN'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `news`
Executing (default): DROP TABLE IF EXISTS `user`;
Executing (default): CREATE TABLE IF NOT EXISTS `user` (`id` INTEGER auto_increment , `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `fullname` VARCHAR(255), `phone_number` VARCHAR(255), `address` VARCHAR(255), `fb_address` VARCHAR(255), `zalo_address` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `ward_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`ward_id`) REFERENCES `ward` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user`
Executing (default): DROP TABLE IF EXISTS `order`;
Executing (default): CREATE TABLE IF NOT EXISTS `order` (`id` INTEGER auto_increment , `total` INTEGER, `status` ENUM('NEW', 'CONFIRMED', 'TRANSFER', 'SUCCESS', 'FAILURE', 'CANCEL'), `code` VARCHAR(255), `payment_type` ENUM('TRANSFER_MONEY'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `user_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `order`
Executing (default): DROP TABLE IF EXISTS `order_product`;
Executing (default): CREATE TABLE IF NOT EXISTS `order_product` (`number` INTEGER, `total_price` INTEGER, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `order_id` INTEGER , `product_id` INTEGER , PRIMARY KEY (`order_id`, `product_id`), FOREIGN KEY (`order_id`) REFERENCES `order` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `order_product`
Executing (default): DROP TABLE IF EXISTS `product_camera`;
Executing (default): CREATE TABLE IF NOT EXISTS `product_camera` (`id` INTEGER NOT NULL auto_increment , `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product_camera`
Executing (default): DROP TABLE IF EXISTS `product_promotion`;
Executing (default): CREATE TABLE IF NOT EXISTS `product_promotion` (`id` INTEGER NOT NULL auto_increment , `date_start` DATETIME, `date_end` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product_promotion`
Executing (default): DROP TABLE IF EXISTS `permission`;
Executing (default): CREATE TABLE IF NOT EXISTS `permission` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `permission`
Executing (default): DROP TABLE IF EXISTS `role`;
Executing (default): CREATE TABLE IF NOT EXISTS `role` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `role`
Executing (default): DROP TABLE IF EXISTS `role_permission`;
Executing (default): CREATE TABLE IF NOT EXISTS `role_permission` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `permission_id` INTEGER , `role_id` INTEGER , PRIMARY KEY (`permission_id`, `role_id`), FOREIGN KEY (`permission_id`) REFERENCES `permission` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `role_permission`
Executing (default): DROP TABLE IF EXISTS `user_Role`;
Executing (default): CREATE TABLE IF NOT EXISTS `user_Role` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `user_id` INTEGER , `role_id` INTEGER , PRIMARY KEY (`user_id`, `role_id`), FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user_Role`
Executing (default): DROP TABLE IF EXISTS `promotion`;
Executing (default): CREATE TABLE IF NOT EXISTS `promotion` (`id` INTEGER auto_increment , `name` VARCHAR(255), `status` ENUM('ACTIVE', 'INACTIVE'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `promotion`
Executing (default): DROP TABLE IF EXISTS `vendor`;
Executing (default): CREATE TABLE IF NOT EXISTS `vendor` (`id` INTEGER auto_increment , `name` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `vendor`
Executing (4d5f6d5a-c140-4d9c-be32-ff4f13c721bd): START TRANSACTION;
Executing (4d5f6d5a-c140-4d9c-be32-ff4f13c721bd): SELECT `id`, `name` FROM `role` AS `Role` WHERE `Role`.`name` = 'ADMIN' LIMIT 1;
Executing (default): INSERT INTO `camera` (`id`,`name`,`namespace`,`resolution`,`fileOutput`,`uri`,`status`,`type`,`created_at`,`updated_at`) VALUES (NULL,'camera1','/cam1','320x240','camera%05d.mp4','rtsp://localhost:8554/1','OFF','BINH_RUOU','2018-08-19 10:18:17','2018-08-19 10:18:17'),(NULL,'camera2','/cam2','320x240','camera%05d.mp4','rtsp://localhost:8554/2','OFF','CHUONG_GA','2018-08-19 10:18:17','2018-08-19 10:18:17');
Executing (70c81c60-7ab7-4a16-aaee-6962f02f015c): START TRANSACTION;
Executing (4d5f6d5a-c140-4d9c-be32-ff4f13c721bd): INSERT INTO `role` (`id`,`name`) VALUES (DEFAULT,'ADMIN');
Executing (70c81c60-7ab7-4a16-aaee-6962f02f015c): SELECT `id`, `email`, `password`, `fullname`, `phone_number`, `address`, `fb_address`, `zalo_address`, `created_at`, `updated_at`, `ward_id` FROM `user` AS `User` WHERE `User`.`email` = 'tranducninhnd94@hotmail.com';
Executing (4d5f6d5a-c140-4d9c-be32-ff4f13c721bd): COMMIT;
Executing (70c81c60-7ab7-4a16-aaee-6962f02f015c): INSERT INTO `user` (`id`,`email`,`password`,`fullname`,`phone_number`,`address`,`created_at`,`updated_at`) VALUES (DEFAULT,'tranducninhnd94@hotmail.com','$2a$12$zbQeKJAjQF20YdOdyCNbvONLp0JBzrFPbfJniwI2asAqF8QisFTEC','Tran Duc Ninh','01669709094','Nam Dinh','2018-08-19 10:18:17','2018-08-19 10:18:17');
Executing (70c81c60-7ab7-4a16-aaee-6962f02f015c): COMMIT;
Executing (default): SELECT `User`.`id`, `User`.`email`, `User`.`fullname`, `User`.`phone_number`, `User`.`password`, `User`.`address`, `User`.`created_at`, `User`.`updated_at`, `roles`.`id` AS `roles.id`, `roles`.`name` AS `roles.name`, `roles->UserRole`.`created_at` AS `roles.UserRole.created_at`, `roles->UserRole`.`updated_at` AS `roles.UserRole.updated_at`, `roles->UserRole`.`user_id` AS `roles.UserRole.user_id`, `roles->UserRole`.`role_id` AS `roles.UserRole.role_id` FROM `user` AS `User` LEFT OUTER JOIN ( `user_Role` AS `roles->UserRole` INNER JOIN `role` AS `roles` ON `roles`.`id` = `roles->UserRole`.`role_id`) ON `User`.`id` = `roles->UserRole`.`user_id` WHERE `User`.`email` = 'tranducninhnd94@hotmail.com';
Executing (default): SELECT count(*) AS `count` FROM `camera` AS `Camera`;
Executing (default): SELECT `id`, `name`, `namespace`, `resolution`, `fileOutput`, `uri`, `location`, `status`, `description`, `type`, `created_at`, `updated_at` FROM `camera` AS `Camera` LIMIT 0, 10;
Executing (default): SELECT count(`Product`.`id`) AS `count` FROM `product` AS `Product` LEFT OUTER JOIN `image_upload` AS `images` ON `Product`.`id` = `images`.`product_id` LEFT OUTER JOIN `video` AS `videos` ON `Product`.`id` = `videos`.`product_id` LEFT OUTER JOIN `type` AS `type` ON `Product`.`type_id` = `type`.`id`;
Executing (default): SELECT `Product`.*, `images`.`id` AS `images.id`, `images`.`path` AS `images.path`, `images`.`size` AS `images.size`, `images`.`mimetype` AS `images.mimetype`, `images`.`originalname` AS `images.originalname`, `images`.`encoding` AS `images.encoding`, `images`.`filename` AS `images.filename`, `images`.`priority` AS `images.priority`, `images`.`created_at` AS `images.created_at`, `images`.`updated_at` AS `images.updated_at`, `images`.`product_id` AS `images.product_id`, `videos`.`id` AS `videos.id`, `videos`.`id_video` AS `videos.id_video`, `videos`.`url` AS `videos.url`, `videos`.`hosted_by` AS `videos.hosted_by`, `videos`.`title` AS `videos.title`, `videos`.`description` AS `videos.description`, `videos`.`started_at` AS `videos.started_at`, `videos`.`ended_at` AS `videos.ended_at`, `videos`.`embedded_link` AS `videos.embedded_link`, `videos`.`created_type` AS `videos.created_type`, `videos`.`created_at` AS `videos.created_at`, `videos`.`updated_at` AS `videos.updated_at`, `videos`.`camera_id` AS `videos.camera_id`, `videos`.`product_id` AS `videos.product_id`, `type`.`id` AS `type.id`, `type`.`name` AS `type.name`, `type`.`created_at` AS `type.created_at`, `type`.`updated_at` AS `type.updated_at` FROM (SELECT `Product`.`id`, `Product`.`name`, `Product`.`original_price`, `Product`.`sale_price`, `Product`.`description`, `Product`.`status`, `Product`.`created_at`, `Product`.`updated_at`, `Product`.`type_id`, `Product`.`camera_id` FROM `product` AS `Product` LIMIT 0, 10) AS `Product` LEFT OUTER JOIN `image_upload` AS `images` ON `Product`.`id` = `images`.`product_id` LEFT OUTER JOIN `video` AS `videos` ON `Product`.`id` = `videos`.`product_id` LEFT OUTER JOIN `type` AS `type` ON `Product`.`type_id` = `type`.`id`;
Executing (default): SELECT count(*) AS `count` FROM `camera` AS `Camera`;
Executing (default): SELECT `id`, `name`, `namespace`, `resolution`, `fileOutput`, `uri`, `location`, `status`, `description`, `type`, `created_at`, `updated_at` FROM `camera` AS `Camera` LIMIT 0, 10;
Executing (default): SELECT count(*) AS `count` FROM `video` AS `Video` WHERE `Video`.`created_type` LIKE '%BY_PRODUCT%';
Executing (default): SELECT `id`, `id_video`, `url`, `hosted_by`, `title`, `description`, `started_at`, `ended_at`, `embedded_link`, `created_type`, `created_at`, `updated_at`, `camera_id`, `product_id` FROM `video` AS `Video` WHERE `Video`.`created_type` LIKE '%BY_PRODUCT%' LIMIT 0, 10;
Executing (default): SELECT count(`Product`.`id`) AS `count` FROM `product` AS `Product` LEFT OUTER JOIN `image_upload` AS `images` ON `Product`.`id` = `images`.`product_id` LEFT OUTER JOIN `video` AS `videos` ON `Product`.`id` = `videos`.`product_id` LEFT OUTER JOIN `type` AS `type` ON `Product`.`type_id` = `type`.`id`;
Executing (default): SELECT `Product`.*, `images`.`id` AS `images.id`, `images`.`path` AS `images.path`, `images`.`size` AS `images.size`, `images`.`mimetype` AS `images.mimetype`, `images`.`originalname` AS `images.originalname`, `images`.`encoding` AS `images.encoding`, `images`.`filename` AS `images.filename`, `images`.`priority` AS `images.priority`, `images`.`created_at` AS `images.created_at`, `images`.`updated_at` AS `images.updated_at`, `images`.`product_id` AS `images.product_id`, `videos`.`id` AS `videos.id`, `videos`.`id_video` AS `videos.id_video`, `videos`.`url` AS `videos.url`, `videos`.`hosted_by` AS `videos.hosted_by`, `videos`.`title` AS `videos.title`, `videos`.`description` AS `videos.description`, `videos`.`started_at` AS `videos.started_at`, `videos`.`ended_at` AS `videos.ended_at`, `videos`.`embedded_link` AS `videos.embedded_link`, `videos`.`created_type` AS `videos.created_type`, `videos`.`created_at` AS `videos.created_at`, `videos`.`updated_at` AS `videos.updated_at`, `videos`.`camera_id` AS `videos.camera_id`, `videos`.`product_id` AS `videos.product_id`, `type`.`id` AS `type.id`, `type`.`name` AS `type.name`, `type`.`created_at` AS `type.created_at`, `type`.`updated_at` AS `type.updated_at` FROM (SELECT `Product`.`id`, `Product`.`name`, `Product`.`original_price`, `Product`.`sale_price`, `Product`.`description`, `Product`.`status`, `Product`.`created_at`, `Product`.`updated_at`, `Product`.`type_id`, `Product`.`camera_id` FROM `product` AS `Product` LIMIT 0, 10) AS `Product` LEFT OUTER JOIN `image_upload` AS `images` ON `Product`.`id` = `images`.`product_id` LEFT OUTER JOIN `video` AS `videos` ON `Product`.`id` = `videos`.`product_id` LEFT OUTER JOIN `type` AS `type` ON `Product`.`type_id` = `type`.`id`;
Executing (default): SELECT count(*) AS `count` FROM `camera` AS `Camera`;
Executing (default): SELECT `id`, `name`, `namespace`, `resolution`, `fileOutput`, `uri`, `location`, `status`, `description`, `type`, `created_at`, `updated_at` FROM `camera` AS `Camera` LIMIT 0, 10;
Executing (default): SELECT count(`Order`.`id`) AS `count` FROM `order` AS `Order` LEFT OUTER JOIN `user` AS `customer` ON `Order`.`user_id` = `customer`.`id` LEFT OUTER JOIN ( `order_product` AS `products->OrderProduct` INNER JOIN `product` AS `products` ON `products`.`id` = `products->OrderProduct`.`product_id`) ON `Order`.`id` = `products->OrderProduct`.`order_id`;
Executing (default): SELECT `Order`.*, `customer`.`id` AS `customer.id`, `customer`.`email` AS `customer.email`, `customer`.`password` AS `customer.password`, `customer`.`fullname` AS `customer.fullname`, `customer`.`phone_number` AS `customer.phone_number`, `customer`.`address` AS `customer.address`, `customer`.`fb_address` AS `customer.fb_address`, `customer`.`zalo_address` AS `customer.zalo_address`, `customer`.`created_at` AS `customer.created_at`, `customer`.`updated_at` AS `customer.updated_at`, `customer`.`ward_id` AS `customer.ward_id`, `products`.`id` AS `products.id`, `products`.`name` AS `products.name`, `products`.`original_price` AS `products.original_price`, `products`.`sale_price` AS `products.sale_price`, `products`.`description` AS `products.description`, `products`.`status` AS `products.status`, `products`.`created_at` AS `products.created_at`, `products`.`updated_at` AS `products.updated_at`, `products`.`type_id` AS `products.type_id`, `products`.`camera_id` AS `products.camera_id`, `products->OrderProduct`.`number` AS `products.OrderProduct.number`, `products->OrderProduct`.`total_price` AS `products.OrderProduct.total_price`, `products->OrderProduct`.`created_at` AS `products.OrderProduct.created_at`, `products->OrderProduct`.`updated_at` AS `products.OrderProduct.updated_at`, `products->OrderProduct`.`order_id` AS `products.OrderProduct.order_id`, `products->OrderProduct`.`product_id` AS `products.OrderProduct.product_id` FROM (SELECT `Order`.`id`, `Order`.`total`, `Order`.`status`, `Order`.`code`, `Order`.`payment_type`, `Order`.`created_at`, `Order`.`updated_at`, `Order`.`user_id` FROM `order` AS `Order` LIMIT 0, 10) AS `Order` LEFT OUTER JOIN `user` AS `customer` ON `Order`.`user_id` = `customer`.`id` LEFT OUTER JOIN ( `order_product` AS `products->OrderProduct` INNER JOIN `product` AS `products` ON `products`.`id` = `products->OrderProduct`.`product_id`) ON `Order`.`id` = `products->OrderProduct`.`order_id`;
Executing (default): SELECT count(`Order`.`id`) AS `count` FROM `order` AS `Order` LEFT OUTER JOIN `user` AS `customer` ON `Order`.`user_id` = `customer`.`id` LEFT OUTER JOIN ( `order_product` AS `products->OrderProduct` INNER JOIN `product` AS `products` ON `products`.`id` = `products->OrderProduct`.`product_id`) ON `Order`.`id` = `products->OrderProduct`.`order_id`;
Executing (default): SELECT `Order`.*, `customer`.`id` AS `customer.id`, `customer`.`email` AS `customer.email`, `customer`.`password` AS `customer.password`, `customer`.`fullname` AS `customer.fullname`, `customer`.`phone_number` AS `customer.phone_number`, `customer`.`address` AS `customer.address`, `customer`.`fb_address` AS `customer.fb_address`, `customer`.`zalo_address` AS `customer.zalo_address`, `customer`.`created_at` AS `customer.created_at`, `customer`.`updated_at` AS `customer.updated_at`, `customer`.`ward_id` AS `customer.ward_id`, `products`.`id` AS `products.id`, `products`.`name` AS `products.name`, `products`.`original_price` AS `products.original_price`, `products`.`sale_price` AS `products.sale_price`, `products`.`description` AS `products.description`, `products`.`status` AS `products.status`, `products`.`created_at` AS `products.created_at`, `products`.`updated_at` AS `products.updated_at`, `products`.`type_id` AS `products.type_id`, `products`.`camera_id` AS `products.camera_id`, `products->OrderProduct`.`number` AS `products.OrderProduct.number`, `products->OrderProduct`.`total_price` AS `products.OrderProduct.total_price`, `products->OrderProduct`.`created_at` AS `products.OrderProduct.created_at`, `products->OrderProduct`.`updated_at` AS `products.OrderProduct.updated_at`, `products->OrderProduct`.`order_id` AS `products.OrderProduct.order_id`, `products->OrderProduct`.`product_id` AS `products.OrderProduct.product_id` FROM (SELECT `Order`.`id`, `Order`.`total`, `Order`.`status`, `Order`.`code`, `Order`.`payment_type`, `Order`.`created_at`, `Order`.`updated_at`, `Order`.`user_id` FROM `order` AS `Order` LIMIT 0, 10) AS `Order` LEFT OUTER JOIN `user` AS `customer` ON `Order`.`user_id` = `customer`.`id` LEFT OUTER JOIN ( `order_product` AS `products->OrderProduct` INNER JOIN `product` AS `products` ON `products`.`id` = `products->OrderProduct`.`product_id`) ON `Order`.`id` = `products->OrderProduct`.`order_id`;
Executing (default): SELECT count(`Order`.`id`) AS `count` FROM `order` AS `Order` LEFT OUTER JOIN `user` AS `customer` ON `Order`.`user_id` = `customer`.`id` LEFT OUTER JOIN ( `order_product` AS `products->OrderProduct` INNER JOIN `product` AS `products` ON `products`.`id` = `products->OrderProduct`.`product_id`) ON `Order`.`id` = `products->OrderProduct`.`order_id`;
Executing (default): SELECT `Order`.*, `customer`.`id` AS `customer.id`, `customer`.`email` AS `customer.email`, `customer`.`password` AS `customer.password`, `customer`.`fullname` AS `customer.fullname`, `customer`.`phone_number` AS `customer.phone_number`, `customer`.`address` AS `customer.address`, `customer`.`fb_address` AS `customer.fb_address`, `customer`.`zalo_address` AS `customer.zalo_address`, `customer`.`created_at` AS `customer.created_at`, `customer`.`updated_at` AS `customer.updated_at`, `customer`.`ward_id` AS `customer.ward_id`, `products`.`id` AS `products.id`, `products`.`name` AS `products.name`, `products`.`original_price` AS `products.original_price`, `products`.`sale_price` AS `products.sale_price`, `products`.`description` AS `products.description`, `products`.`status` AS `products.status`, `products`.`created_at` AS `products.created_at`, `products`.`updated_at` AS `products.updated_at`, `products`.`type_id` AS `products.type_id`, `products`.`camera_id` AS `products.camera_id`, `products->OrderProduct`.`number` AS `products.OrderProduct.number`, `products->OrderProduct`.`total_price` AS `products.OrderProduct.total_price`, `products->OrderProduct`.`created_at` AS `products.OrderProduct.created_at`, `products->OrderProduct`.`updated_at` AS `products.OrderProduct.updated_at`, `products->OrderProduct`.`order_id` AS `products.OrderProduct.order_id`, `products->OrderProduct`.`product_id` AS `products.OrderProduct.product_id` FROM (SELECT `Order`.`id`, `Order`.`total`, `Order`.`status`, `Order`.`code`, `Order`.`payment_type`, `Order`.`created_at`, `Order`.`updated_at`, `Order`.`user_id` FROM `order` AS `Order` LIMIT 0, 10) AS `Order` LEFT OUTER JOIN `user` AS `customer` ON `Order`.`user_id` = `customer`.`id` LEFT OUTER JOIN ( `order_product` AS `products->OrderProduct` INNER JOIN `product` AS `products` ON `products`.`id` = `products->OrderProduct`.`product_id`) ON `Order`.`id` = `products->OrderProduct`.`order_id`;
Executing (default): SELECT count(*) AS `count` FROM `camera` AS `Camera`;
Executing (default): SELECT `id`, `name`, `namespace`, `resolution`, `fileOutput`, `uri`, `location`, `status`, `description`, `type`, `created_at`, `updated_at` FROM `camera` AS `Camera` LIMIT 0, 10;
Executing (default): SELECT count(*) AS `count` FROM `video` AS `Video` WHERE `Video`.`created_type` LIKE '%BY_PRODUCT%';
Executing (default): SELECT `id`, `id_video`, `url`, `hosted_by`, `title`, `description`, `started_at`, `ended_at`, `embedded_link`, `created_type`, `created_at`, `updated_at`, `camera_id`, `product_id` FROM `video` AS `Video` WHERE `Video`.`created_type` LIKE '%BY_PRODUCT%' LIMIT 0, 10;
Executing (default): SELECT count(`Order`.`id`) AS `count` FROM `order` AS `Order` LEFT OUTER JOIN `user` AS `customer` ON `Order`.`user_id` = `customer`.`id` LEFT OUTER JOIN ( `order_product` AS `products->OrderProduct` INNER JOIN `product` AS `products` ON `products`.`id` = `products->OrderProduct`.`product_id`) ON `Order`.`id` = `products->OrderProduct`.`order_id`;
Executing (default): SELECT `Order`.*, `customer`.`id` AS `customer.id`, `customer`.`email` AS `customer.email`, `customer`.`password` AS `customer.password`, `customer`.`fullname` AS `customer.fullname`, `customer`.`phone_number` AS `customer.phone_number`, `customer`.`address` AS `customer.address`, `customer`.`fb_address` AS `customer.fb_address`, `customer`.`zalo_address` AS `customer.zalo_address`, `customer`.`created_at` AS `customer.created_at`, `customer`.`updated_at` AS `customer.updated_at`, `customer`.`ward_id` AS `customer.ward_id`, `products`.`id` AS `products.id`, `products`.`name` AS `products.name`, `products`.`original_price` AS `products.original_price`, `products`.`sale_price` AS `products.sale_price`, `products`.`description` AS `products.description`, `products`.`status` AS `products.status`, `products`.`created_at` AS `products.created_at`, `products`.`updated_at` AS `products.updated_at`, `products`.`type_id` AS `products.type_id`, `products`.`camera_id` AS `products.camera_id`, `products->OrderProduct`.`number` AS `products.OrderProduct.number`, `products->OrderProduct`.`total_price` AS `products.OrderProduct.total_price`, `products->OrderProduct`.`created_at` AS `products.OrderProduct.created_at`, `products->OrderProduct`.`updated_at` AS `products.OrderProduct.updated_at`, `products->OrderProduct`.`order_id` AS `products.OrderProduct.order_id`, `products->OrderProduct`.`product_id` AS `products.OrderProduct.product_id` FROM (SELECT `Order`.`id`, `Order`.`total`, `Order`.`status`, `Order`.`code`, `Order`.`payment_type`, `Order`.`created_at`, `Order`.`updated_at`, `Order`.`user_id` FROM `order` AS `Order` LIMIT 0, 10) AS `Order` LEFT OUTER JOIN `user` AS `customer` ON `Order`.`user_id` = `customer`.`id` LEFT OUTER JOIN ( `order_product` AS `products->OrderProduct` INNER JOIN `product` AS `products` ON `products`.`id` = `products->OrderProduct`.`product_id`) ON `Order`.`id` = `products->OrderProduct`.`order_id`;
Executing (default): SELECT count(*) AS `count` FROM `video` AS `Video` WHERE `Video`.`created_type` LIKE '%BY_PRODUCT%';
Executing (default): SELECT `id`, `id_video`, `url`, `hosted_by`, `title`, `description`, `started_at`, `ended_at`, `embedded_link`, `created_type`, `created_at`, `updated_at`, `camera_id`, `product_id` FROM `video` AS `Video` WHERE `Video`.`created_type` LIKE '%BY_PRODUCT%' LIMIT 0, 10;
Executing (default): SELECT count(`Product`.`id`) AS `count` FROM `product` AS `Product` LEFT OUTER JOIN `image_upload` AS `images` ON `Product`.`id` = `images`.`product_id` LEFT OUTER JOIN `video` AS `videos` ON `Product`.`id` = `videos`.`product_id` LEFT OUTER JOIN `type` AS `type` ON `Product`.`type_id` = `type`.`id`;
Executing (default): SELECT `Product`.*, `images`.`id` AS `images.id`, `images`.`path` AS `images.path`, `images`.`size` AS `images.size`, `images`.`mimetype` AS `images.mimetype`, `images`.`originalname` AS `images.originalname`, `images`.`encoding` AS `images.encoding`, `images`.`filename` AS `images.filename`, `images`.`priority` AS `images.priority`, `images`.`created_at` AS `images.created_at`, `images`.`updated_at` AS `images.updated_at`, `images`.`product_id` AS `images.product_id`, `videos`.`id` AS `videos.id`, `videos`.`id_video` AS `videos.id_video`, `videos`.`url` AS `videos.url`, `videos`.`hosted_by` AS `videos.hosted_by`, `videos`.`title` AS `videos.title`, `videos`.`description` AS `videos.description`, `videos`.`started_at` AS `videos.started_at`, `videos`.`ended_at` AS `videos.ended_at`, `videos`.`embedded_link` AS `videos.embedded_link`, `videos`.`created_type` AS `videos.created_type`, `videos`.`created_at` AS `videos.created_at`, `videos`.`updated_at` AS `videos.updated_at`, `videos`.`camera_id` AS `videos.camera_id`, `videos`.`product_id` AS `videos.product_id`, `type`.`id` AS `type.id`, `type`.`name` AS `type.name`, `type`.`created_at` AS `type.created_at`, `type`.`updated_at` AS `type.updated_at` FROM (SELECT `Product`.`id`, `Product`.`name`, `Product`.`original_price`, `Product`.`sale_price`, `Product`.`description`, `Product`.`status`, `Product`.`created_at`, `Product`.`updated_at`, `Product`.`type_id`, `Product`.`camera_id` FROM `product` AS `Product` LIMIT 0, 10) AS `Product` LEFT OUTER JOIN `image_upload` AS `images` ON `Product`.`id` = `images`.`product_id` LEFT OUTER JOIN `video` AS `videos` ON `Product`.`id` = `videos`.`product_id` LEFT OUTER JOIN `type` AS `type` ON `Product`.`type_id` = `type`.`id`;
Executing (default): SELECT count(*) AS `count` FROM `camera` AS `Camera`;
Executing (default): SELECT `id`, `name`, `namespace`, `resolution`, `fileOutput`, `uri`, `location`, `status`, `description`, `type`, `created_at`, `updated_at` FROM `camera` AS `Camera` LIMIT 0, 10;
Executing (default): SELECT count(*) AS `count` FROM `video` AS `Video` WHERE `Video`.`created_type` LIKE '%BY_PRODUCT%' AND `Video`.`camera_id` LIKE '2';
Executing (default): SELECT `id`, `id_video`, `url`, `hosted_by`, `title`, `description`, `started_at`, `ended_at`, `embedded_link`, `created_type`, `created_at`, `updated_at`, `camera_id`, `product_id` FROM `video` AS `Video` WHERE `Video`.`created_type` LIKE '%BY_PRODUCT%' AND `Video`.`camera_id` LIKE '2' LIMIT 0, 10;
Executing (default): SELECT count(*) AS `count` FROM `video` AS `Video` WHERE `Video`.`created_type` LIKE '%BY_PRODUCT%' AND `Video`.`camera_id` LIKE '1';
Executing (default): SELECT `id`, `id_video`, `url`, `hosted_by`, `title`, `description`, `started_at`, `ended_at`, `embedded_link`, `created_type`, `created_at`, `updated_at`, `camera_id`, `product_id` FROM `video` AS `Video` WHERE `Video`.`created_type` LIKE '%BY_PRODUCT%' AND `Video`.`camera_id` LIKE '1' LIMIT 0, 10;
Executing (default): SELECT count(*) AS `count` FROM `video` AS `Video` WHERE `Video`.`created_type` LIKE '%BY_PRODUCT%' AND `Video`.`camera_id` LIKE '0';
Executing (default): SELECT `id`, `id_video`, `url`, `hosted_by`, `title`, `description`, `started_at`, `ended_at`, `embedded_link`, `created_type`, `created_at`, `updated_at`, `camera_id`, `product_id` FROM `video` AS `Video` WHERE `Video`.`created_type` LIKE '%BY_PRODUCT%' AND `Video`.`camera_id` LIKE '0' LIMIT 0, 10;
Executing (default): SET FOREIGN_KEY_CHECKS = 0
Executing (default): DROP TABLE IF EXISTS `vendor`;
Executing (default): DROP TABLE IF EXISTS `promotion`;
Executing (default): DROP TABLE IF EXISTS `user_Role`;
Executing (default): DROP TABLE IF EXISTS `role_permission`;
Executing (default): DROP TABLE IF EXISTS `role`;
Executing (default): DROP TABLE IF EXISTS `permission`;
Executing (default): DROP TABLE IF EXISTS `product_promotion`;
Executing (default): DROP TABLE IF EXISTS `product_camera`;
Executing (default): DROP TABLE IF EXISTS `order_product`;
Executing (default): DROP TABLE IF EXISTS `order`;
Executing (default): DROP TABLE IF EXISTS `user`;
Executing (default): DROP TABLE IF EXISTS `news`;
Executing (default): DROP TABLE IF EXISTS `ward`;
Executing (default): DROP TABLE IF EXISTS `district`;
Executing (default): DROP TABLE IF EXISTS `province`;
Executing (default): DROP TABLE IF EXISTS `image_upload`;
Executing (default): DROP TABLE IF EXISTS `video`;
Executing (default): DROP TABLE IF EXISTS `product`;
Executing (default): DROP TABLE IF EXISTS `type`;
Executing (default): DROP TABLE IF EXISTS `camera`;
Executing (default): DROP TABLE IF EXISTS `camera`;
Executing (default): CREATE TABLE IF NOT EXISTS `camera` (`id` INTEGER auto_increment , `name` VARCHAR(255) UNIQUE, `namespace` VARCHAR(255) UNIQUE, `resolution` VARCHAR(255), `fileOutput` VARCHAR(255), `uri` VARCHAR(255) UNIQUE, `location` VARCHAR(255), `status` ENUM('ON', 'OFF', 'RETIRED') DEFAULT 'OFF', `description` VARCHAR(255), `type` ENUM('BINH_RUOU', 'CHUONG_GA'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `camera`
Executing (default): DROP TABLE IF EXISTS `type`;
Executing (default): CREATE TABLE IF NOT EXISTS `type` (`id` INTEGER auto_increment , `name` VARCHAR(255) UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `type`
Executing (default): DROP TABLE IF EXISTS `product`;
Executing (default): CREATE TABLE IF NOT EXISTS `product` (`id` INTEGER auto_increment , `name` VARCHAR(255) UNIQUE, `original_price` FLOAT, `sale_price` FLOAT, `description` VARCHAR(255), `status` ENUM('SHOW', 'HIDDEN'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `type_id` INTEGER, `camera_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`type_id`) REFERENCES `type` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product`
Executing (default): DROP TABLE IF EXISTS `video`;
Executing (default): CREATE TABLE IF NOT EXISTS `video` (`id` INTEGER auto_increment , `id_video` VARCHAR(255), `url` TEXT, `hosted_by` ENUM('FACEBOOK', 'DRIVER', 'YOUTUBE', 'LOCAL'), `title` VARCHAR(255), `description` TEXT, `started_at` DATETIME, `ended_at` DATETIME, `embedded_link` TEXT, `created_type` ENUM('FREQUENCY', 'BY_PRODUCT'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `camera_id` INTEGER, `product_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`camera_id`) REFERENCES `camera` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `video`
Executing (default): DROP TABLE IF EXISTS `image_upload`;
Executing (default): CREATE TABLE IF NOT EXISTS `image_upload` (`id` INTEGER auto_increment , `path` VARCHAR(255), `size` VARCHAR(255), `mimetype` VARCHAR(255), `originalname` VARCHAR(255), `encoding` VARCHAR(255), `filename` VARCHAR(255), `priority` TINYINT DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `product_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `image_upload`
Executing (default): DROP TABLE IF EXISTS `province`;
Executing (default): CREATE TABLE IF NOT EXISTS `province` (`id` INTEGER auto_increment , `name` VARCHAR(255) UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `province`
Executing (default): DROP TABLE IF EXISTS `district`;
Executing (default): CREATE TABLE IF NOT EXISTS `district` (`id` INTEGER auto_increment , `name` VARCHAR(255) UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `province_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`province_id`) REFERENCES `province` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `district`
Executing (default): DROP TABLE IF EXISTS `ward`;
Executing (default): CREATE TABLE IF NOT EXISTS `ward` (`id` INTEGER auto_increment , `name` VARCHAR(255) UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `disctrict_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`disctrict_id`) REFERENCES `district` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `ward`
Executing (default): DROP TABLE IF EXISTS `news`;
Executing (default): CREATE TABLE IF NOT EXISTS `news` (`id` INTEGER auto_increment , `title` VARCHAR(255), `content` TEXT, `status` ENUM('SHOW', 'HIDDEN'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `news`
Executing (default): DROP TABLE IF EXISTS `user`;
Executing (default): CREATE TABLE IF NOT EXISTS `user` (`id` INTEGER auto_increment , `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `fullname` VARCHAR(255), `phone_number` VARCHAR(255), `address` VARCHAR(255), `fb_address` VARCHAR(255), `zalo_address` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `ward_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`ward_id`) REFERENCES `ward` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user`
Executing (default): DROP TABLE IF EXISTS `order`;
Executing (default): CREATE TABLE IF NOT EXISTS `order` (`id` INTEGER auto_increment , `total` INTEGER, `status` ENUM('NEW', 'CONFIRMED', 'TRANSFER', 'SUCCESS', 'FAILURE', 'CANCEL'), `code` VARCHAR(255), `payment_type` ENUM('TRANSFER_MONEY'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `user_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `order`
Executing (default): DROP TABLE IF EXISTS `order_product`;
Executing (default): CREATE TABLE IF NOT EXISTS `order_product` (`number` INTEGER, `total_price` INTEGER, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `order_id` INTEGER , `product_id` INTEGER , PRIMARY KEY (`order_id`, `product_id`), FOREIGN KEY (`order_id`) REFERENCES `order` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`product_id`) REFERENCES `product` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `order_product`
Executing (default): DROP TABLE IF EXISTS `product_camera`;
Executing (default): CREATE TABLE IF NOT EXISTS `product_camera` (`id` INTEGER NOT NULL auto_increment , `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product_camera`
Executing (default): DROP TABLE IF EXISTS `product_promotion`;
Executing (default): CREATE TABLE IF NOT EXISTS `product_promotion` (`id` INTEGER NOT NULL auto_increment , `date_start` DATETIME, `date_end` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `product_promotion`
Executing (default): DROP TABLE IF EXISTS `permission`;
Executing (default): CREATE TABLE IF NOT EXISTS `permission` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `permission`
Executing (default): DROP TABLE IF EXISTS `role`;
Executing (default): CREATE TABLE IF NOT EXISTS `role` (`id` INTEGER auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `role`
Executing (default): DROP TABLE IF EXISTS `role_permission`;
Executing (default): CREATE TABLE IF NOT EXISTS `role_permission` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `permission_id` INTEGER , `role_id` INTEGER , PRIMARY KEY (`permission_id`, `role_id`), FOREIGN KEY (`permission_id`) REFERENCES `permission` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `role_permission`
Executing (default): DROP TABLE IF EXISTS `user_Role`;
Executing (default): CREATE TABLE IF NOT EXISTS `user_Role` (`created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `user_id` INTEGER , `role_id` INTEGER , PRIMARY KEY (`user_id`, `role_id`), FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `user_Role`
Executing (default): DROP TABLE IF EXISTS `promotion`;
Executing (default): CREATE TABLE IF NOT EXISTS `promotion` (`id` INTEGER auto_increment , `name` VARCHAR(255), `status` ENUM('ACTIVE', 'INACTIVE'), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `promotion`
Executing (default): DROP TABLE IF EXISTS `vendor`;
Executing (default): CREATE TABLE IF NOT EXISTS `vendor` (`id` INTEGER auto_increment , `name` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `vendor`
Executing (a415d3f7-340f-499e-9577-ef6a3561b37b): START TRANSACTION;
Executing (a415d3f7-340f-499e-9577-ef6a3561b37b): SELECT `id`, `name` FROM `role` AS `Role` WHERE `Role`.`name` = 'ADMIN' LIMIT 1;
Executing (a415d3f7-340f-499e-9577-ef6a3561b37b): INSERT INTO `role` (`id`,`name`) VALUES (DEFAULT,'ADMIN');
Executing (default): INSERT INTO `camera` (`id`,`name`,`namespace`,`resolution`,`fileOutput`,`uri`,`status`,`type`,`created_at`,`updated_at`) VALUES (NULL,'camera1','/cam1','320x240','camera%05d.mp4','rtsp://localhost:8554/1','OFF','BINH_RUOU','2018-08-19 13:34:19','2018-08-19 13:34:19'),(NULL,'camera2','/cam2','320x240','camera%05d.mp4','rtsp://localhost:8554/2','OFF','CHUONG_GA','2018-08-19 13:34:19','2018-08-19 13:34:19');
Executing (241279bd-faae-491d-8809-08b17b03eea1): START TRANSACTION;
Executing (a415d3f7-340f-499e-9577-ef6a3561b37b): COMMIT;
Executing (241279bd-faae-491d-8809-08b17b03eea1): SELECT `id`, `email`, `password`, `fullname`, `phone_number`, `address`, `fb_address`, `zalo_address`, `created_at`, `updated_at`, `ward_id` FROM `user` AS `User` WHERE `User`.`email` = 'tranducninhnd94@hotmail.com';
Executing (241279bd-faae-491d-8809-08b17b03eea1): INSERT INTO `user` (`id`,`email`,`password`,`fullname`,`phone_number`,`address`,`created_at`,`updated_at`) VALUES (DEFAULT,'tranducninhnd94@hotmail.com','$2a$12$q9H5e.lvjOFDAyyaZNeGluJ94ejI8gTxe1Qz3HRFL34gfVTTAUZOO','Tran Duc Ninh','01669709094','Nam Dinh','2018-08-19 13:34:19','2018-08-19 13:34:19');
Executing (241279bd-faae-491d-8809-08b17b03eea1): COMMIT;
Executing (default): SELECT count(*) AS `count` FROM `user` AS `User`;
Executing (default): SELECT `id`, `email`, `password`, `fullname`, `phone_number`, `address`, `fb_address`, `zalo_address`, `created_at`, `updated_at`, `ward_id` FROM `user` AS `User` LIMIT 0, 10;
Executing (default): SELECT count(*) AS `count` FROM `camera` AS `Camera`;
Executing (default): SELECT `id`, `name`, `namespace`, `resolution`, `fileOutput`, `uri`, `location`, `status`, `description`, `type`, `created_at`, `updated_at` FROM `camera` AS `Camera` LIMIT 0, 10;
Executing (default): SELECT count(`Product`.`id`) AS `count` FROM `product` AS `Product` LEFT OUTER JOIN `image_upload` AS `images` ON `Product`.`id` = `images`.`product_id` LEFT OUTER JOIN `video` AS `videos` ON `Product`.`id` = `videos`.`product_id` LEFT OUTER JOIN `type` AS `type` ON `Product`.`type_id` = `type`.`id`;
Executing (default): SELECT `Product`.*, `images`.`id` AS `images.id`, `images`.`path` AS `images.path`, `images`.`size` AS `images.size`, `images`.`mimetype` AS `images.mimetype`, `images`.`originalname` AS `images.originalname`, `images`.`encoding` AS `images.encoding`, `images`.`filename` AS `images.filename`, `images`.`priority` AS `images.priority`, `images`.`created_at` AS `images.created_at`, `images`.`updated_at` AS `images.updated_at`, `images`.`product_id` AS `images.product_id`, `videos`.`id` AS `videos.id`, `videos`.`id_video` AS `videos.id_video`, `videos`.`url` AS `videos.url`, `videos`.`hosted_by` AS `videos.hosted_by`, `videos`.`title` AS `videos.title`, `videos`.`description` AS `videos.description`, `videos`.`started_at` AS `videos.started_at`, `videos`.`ended_at` AS `videos.ended_at`, `videos`.`embedded_link` AS `videos.embedded_link`, `videos`.`created_type` AS `videos.created_type`, `videos`.`created_at` AS `videos.created_at`, `videos`.`updated_at` AS `videos.updated_at`, `videos`.`camera_id` AS `videos.camera_id`, `videos`.`product_id` AS `videos.product_id`, `type`.`id` AS `type.id`, `type`.`name` AS `type.name`, `type`.`created_at` AS `type.created_at`, `type`.`updated_at` AS `type.updated_at` FROM (SELECT `Product`.`id`, `Product`.`name`, `Product`.`original_price`, `Product`.`sale_price`, `Product`.`description`, `Product`.`status`, `Product`.`created_at`, `Product`.`updated_at`, `Product`.`type_id`, `Product`.`camera_id` FROM `product` AS `Product` LIMIT 0, 10) AS `Product` LEFT OUTER JOIN `image_upload` AS `images` ON `Product`.`id` = `images`.`product_id` LEFT OUTER JOIN `video` AS `videos` ON `Product`.`id` = `videos`.`product_id` LEFT OUTER JOIN `type` AS `type` ON `Product`.`type_id` = `type`.`id`;
Executing (default): SELECT count(*) AS `count` FROM `camera` AS `Camera`;
Executing (default): SELECT `id`, `name`, `namespace`, `resolution`, `fileOutput`, `uri`, `location`, `status`, `description`, `type`, `created_at`, `updated_at` FROM `camera` AS `Camera` LIMIT 0, 10;
Executing (default): SELECT count(`Product`.`id`) AS `count` FROM `product` AS `Product` LEFT OUTER JOIN `image_upload` AS `images` ON `Product`.`id` = `images`.`product_id` LEFT OUTER JOIN `video` AS `videos` ON `Product`.`id` = `videos`.`product_id` LEFT OUTER JOIN `type` AS `type` ON `Product`.`type_id` = `type`.`id`;
Executing (default): SELECT `Product`.*, `images`.`id` AS `images.id`, `images`.`path` AS `images.path`, `images`.`size` AS `images.size`, `images`.`mimetype` AS `images.mimetype`, `images`.`originalname` AS `images.originalname`, `images`.`encoding` AS `images.encoding`, `images`.`filename` AS `images.filename`, `images`.`priority` AS `images.priority`, `images`.`created_at` AS `images.created_at`, `images`.`updated_at` AS `images.updated_at`, `images`.`product_id` AS `images.product_id`, `videos`.`id` AS `videos.id`, `videos`.`id_video` AS `videos.id_video`, `videos`.`url` AS `videos.url`, `videos`.`hosted_by` AS `videos.hosted_by`, `videos`.`title` AS `videos.title`, `videos`.`description` AS `videos.description`, `videos`.`started_at` AS `videos.started_at`, `videos`.`ended_at` AS `videos.ended_at`, `videos`.`embedded_link` AS `videos.embedded_link`, `videos`.`created_type` AS `videos.created_type`, `videos`.`created_at` AS `videos.created_at`, `videos`.`updated_at` AS `videos.updated_at`, `videos`.`camera_id` AS `videos.camera_id`, `videos`.`product_id` AS `videos.product_id`, `type`.`id` AS `type.id`, `type`.`name` AS `type.name`, `type`.`created_at` AS `type.created_at`, `type`.`updated_at` AS `type.updated_at` FROM (SELECT `Product`.`id`, `Product`.`name`, `Product`.`original_price`, `Product`.`sale_price`, `Product`.`description`, `Product`.`status`, `Product`.`created_at`, `Product`.`updated_at`, `Product`.`type_id`, `Product`.`camera_id` FROM `product` AS `Product` LIMIT 0, 10) AS `Product` LEFT OUTER JOIN `image_upload` AS `images` ON `Product`.`id` = `images`.`product_id` LEFT OUTER JOIN `video` AS `videos` ON `Product`.`id` = `videos`.`product_id` LEFT OUTER JOIN `type` AS `type` ON `Product`.`type_id` = `type`.`id`;
Executing (default): SELECT count(`Product`.`id`) AS `count` FROM `product` AS `Product` LEFT OUTER JOIN `image_upload` AS `images` ON `Product`.`id` = `images`.`product_id` LEFT OUTER JOIN `video` AS `videos` ON `Product`.`id` = `videos`.`product_id` LEFT OUTER JOIN `type` AS `type` ON `Product`.`type_id` = `type`.`id`;
Executing (default): SELECT `Product`.*, `images`.`id` AS `images.id`, `images`.`path` AS `images.path`, `images`.`size` AS `images.size`, `images`.`mimetype` AS `images.mimetype`, `images`.`originalname` AS `images.originalname`, `images`.`encoding` AS `images.encoding`, `images`.`filename` AS `images.filename`, `images`.`priority` AS `images.priority`, `images`.`created_at` AS `images.created_at`, `images`.`updated_at` AS `images.updated_at`, `images`.`product_id` AS `images.product_id`, `videos`.`id` AS `videos.id`, `videos`.`id_video` AS `videos.id_video`, `videos`.`url` AS `videos.url`, `videos`.`hosted_by` AS `videos.hosted_by`, `videos`.`title` AS `videos.title`, `videos`.`description` AS `videos.description`, `videos`.`started_at` AS `videos.started_at`, `videos`.`ended_at` AS `videos.ended_at`, `videos`.`embedded_link` AS `videos.embedded_link`, `videos`.`created_type` AS `videos.created_type`, `videos`.`created_at` AS `videos.created_at`, `videos`.`updated_at` AS `videos.updated_at`, `videos`.`camera_id` AS `videos.camera_id`, `videos`.`product_id` AS `videos.product_id`, `type`.`id` AS `type.id`, `type`.`name` AS `type.name`, `type`.`created_at` AS `type.created_at`, `type`.`updated_at` AS `type.updated_at` FROM (SELECT `Product`.`id`, `Product`.`name`, `Product`.`original_price`, `Product`.`sale_price`, `Product`.`description`, `Product`.`status`, `Product`.`created_at`, `Product`.`updated_at`, `Product`.`type_id`, `Product`.`camera_id` FROM `product` AS `Product` LIMIT 0, 10) AS `Product` LEFT OUTER JOIN `image_upload` AS `images` ON `Product`.`id` = `images`.`product_id` LEFT OUTER JOIN `video` AS `videos` ON `Product`.`id` = `videos`.`product_id` LEFT OUTER JOIN `type` AS `type` ON `Product`.`type_id` = `type`.`id`;
Executing (default): SELECT count(`Order`.`id`) AS `count` FROM `order` AS `Order` LEFT OUTER JOIN `user` AS `customer` ON `Order`.`user_id` = `customer`.`id` LEFT OUTER JOIN ( `order_product` AS `products->OrderProduct` INNER JOIN `product` AS `products` ON `products`.`id` = `products->OrderProduct`.`product_id`) ON `Order`.`id` = `products->OrderProduct`.`order_id`;
Executing (default): SELECT `Order`.*, `customer`.`id` AS `customer.id`, `customer`.`email` AS `customer.email`, `customer`.`password` AS `customer.password`, `customer`.`fullname` AS `customer.fullname`, `customer`.`phone_number` AS `customer.phone_number`, `customer`.`address` AS `customer.address`, `customer`.`fb_address` AS `customer.fb_address`, `customer`.`zalo_address` AS `customer.zalo_address`, `customer`.`created_at` AS `customer.created_at`, `customer`.`updated_at` AS `customer.updated_at`, `customer`.`ward_id` AS `customer.ward_id`, `products`.`id` AS `products.id`, `products`.`name` AS `products.name`, `products`.`original_price` AS `products.original_price`, `products`.`sale_price` AS `products.sale_price`, `products`.`description` AS `products.description`, `products`.`status` AS `products.status`, `products`.`created_at` AS `products.created_at`, `products`.`updated_at` AS `products.updated_at`, `products`.`type_id` AS `products.type_id`, `products`.`camera_id` AS `products.camera_id`, `products->OrderProduct`.`number` AS `products.OrderProduct.number`, `products->OrderProduct`.`total_price` AS `products.OrderProduct.total_price`, `products->OrderProduct`.`created_at` AS `products.OrderProduct.created_at`, `products->OrderProduct`.`updated_at` AS `products.OrderProduct.updated_at`, `products->OrderProduct`.`order_id` AS `products.OrderProduct.order_id`, `products->OrderProduct`.`product_id` AS `products.OrderProduct.product_id` FROM (SELECT `Order`.`id`, `Order`.`total`, `Order`.`status`, `Order`.`code`, `Order`.`payment_type`, `Order`.`created_at`, `Order`.`updated_at`, `Order`.`user_id` FROM `order` AS `Order` LIMIT 0, 10) AS `Order` LEFT OUTER JOIN `user` AS `customer` ON `Order`.`user_id` = `customer`.`id` LEFT OUTER JOIN ( `order_product` AS `products->OrderProduct` INNER JOIN `product` AS `products` ON `products`.`id` = `products->OrderProduct`.`product_id`) ON `Order`.`id` = `products->OrderProduct`.`order_id`;
